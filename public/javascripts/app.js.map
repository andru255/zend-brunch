{"version":3,"file":"../public/javascripts/app.js","sources":["app/application.coffee","app/controllers/base/controller.coffee","app/controllers/home-controller.coffee","app/initialize.coffee","app/lib/utils.coffee","app/lib/view-helper.coffee","app/models/base/collection.coffee","app/models/base/model.coffee","app/routes.coffee","app/views/base/collection-view.coffee","app/views/base/view.coffee","app/views/header-view.coffee","app/views/home-page-view.coffee","app/views/site-view.coffee","app/views/templates/header.hbs","app/views/templates/home.hbs","app/views/templates/site.hbs"],"names":[],"mappings":"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","sourcesContent":["# The application object.\nmodule.exports = class Application extends Chaplin.Application\n","SiteView = require 'views/site-view'\nHeaderView = require 'views/header-view'\n\nmodule.exports = class Controller extends Chaplin.Controller\n  # Compositions persist stuff between controllers.\n  # You may also persist models etc.\n  beforeAction: ->\n    @compose 'site', SiteView\n    @compose 'header', HeaderView\n","Controller = require 'controllers/base/controller'\nHomePageView = require 'views/home-page-view'\n\nmodule.exports = class HomeController extends Controller\n  index: ->\n    @view = new HomePageView region: 'main'\n","Application = require 'application'\nroutes = require 'routes'\n\n# Initialize the application on DOM ready event.\n$ ->\n  new Application {\n    title: 'Brunch example application',\n    controllerSuffix: '-controller',\n    routes\n  }\n","# Application-specific utilities\n# ------------------------------\n\n# Delegate to Chaplin’s utils module.\nutils = Chaplin.utils.beget Chaplin.utils\n\n# _(utils).extend\n#  someMethod: ->\n\n# Prevent creating new properties and stuff.\nObject.seal? utils\n\nmodule.exports = utils\n","# Application-specific view helpers\n# http://handlebarsjs.com/#helpers\n# --------------------------------\n\n# Map helpers\n# -----------\n\n# Make 'with' behave a little more mustachey.\nHandlebars.registerHelper 'with', (context, options) ->\n  if not context or Handlebars.Utils.isEmpty context\n    options.inverse(this)\n  else\n    options.fn(context)\n\n# Inverse for 'with'.\nHandlebars.registerHelper 'without', (context, options) ->\n  inverse = options.inverse\n  options.inverse = options.fn\n  options.fn = inverse\n  Handlebars.helpers.with.call(this, context, options)\n\n# Get Chaplin-declared named routes. {{url \"likes#show\" \"105\"}}\nHandlebars.registerHelper 'url', (routeName, params..., options) ->\n  Chaplin.helpers.reverse routeName, params\n","Model = require 'models/base/model'\n\nmodule.exports = class Collection extends Chaplin.Collection\n  # Use the project base model per default, not Chaplin.Model\n  model: Model\n","# Base model.\nmodule.exports = class Model extends Chaplin.Model\n","module.exports = (match) ->\n  match '', 'home#index'\n","View = require './view'\n\nmodule.exports = class CollectionView extends Chaplin.CollectionView\n  # This class doesn’t inherit from the application-specific View class,\n  # so we need to borrow the method from the View prototype:\n  getTemplateFunction: View::getTemplateFunction\n","require 'lib/view-helper' # Just load the view helpers, no return value\n\nmodule.exports = class View extends Chaplin.View\n  # Precompiled templates function initializer.\n  getTemplateFunction: ->\n    @template\n","View = require 'views/base/view'\n\nmodule.exports = class HeaderView extends View\n  autoRender: true\n  className: 'header'\n  region: 'header'\n  template: require 'views/templates/header'\n","View = require 'views/base/view'\n\nmodule.exports = class HomePageView extends View\n  autoRender: true\n  className: 'home-page'\n  template: require 'views/templates/home'\n","View = require 'views/base/view'\n\n# Site view is a top-level view which is bound to body.\nmodule.exports = class SiteView extends View\n  container: 'body'\n  id: 'site-container'\n  regions:\n    header: '#header-container'\n    main: '#page-container'\n  template: require 'views/templates/site'\n","<ul>\n  <li>\n    Docs:\n    <a class=\"header-link\" href=\"http://brunch.io/#documentation\">Brunch</a> /\n    <a class=\"header-link\" href=\"http://docs.chaplinjs.org\">Chaplin</a>\n  </li>\n  <li>\n    GitHub issues:\n    <a class=\"header-link\" href=\"https://github.com/brunch/brunch/issues\">Brunch</a> /\n    <a class=\"header-link\" href=\"https://github.com/chaplinjs/chaplin/issues\">Chaplin</a>\n  </li>\n  <li><a class=\"header-link\" href=\"https://github.com/paulmillr/ostio\">Ost.io example app</a></li>\n</ul>\n","<a href=\"http://brunch.io/\">\n  <img src=\"http://brunch.io/images/brunch.png\" alt=\"Brunch\" />\n</a>\n","<header class=\"header-container\" id=\"header-container\"></header>\n\n<div class=\"container outer-container\">\n  <div class=\"page-container\" id=\"page-container\">\n  </div>\n</div>\n"]}